name: postapp
description: "A new Flutter project."
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: ^3.5.0

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter

  #language
  flutter_localizations:
    sdk: flutter
  #core
  get_it: ^7.6.7
  #  connectivity_plus: ^5.0.2
  animate_do: ^3.3.2



  #UI
  dropdown_search: ^6.0.1
  country_flags: ^3.0.0
  flutter_native_splash: ^2.4.1
  fluttertoast: ^8.2.4
  flutter_screenutil: ^5.9.0
  loading_animation_widget: ^1.3.0
  pinput: ^5.0.0
  intl_phone_field: ^3.2.0
  dropdown_button2: ^2.3.9
  carousel_slider: ^5.0.0
  image_picker: ^1.1.2
  # Flutter library to load and cache network images.
  cached_network_image: ^3.3.1

  #  intl_phone_number_input: ^0.7.4
  #  maps_launcher: ^2.0.1
  #  flutter_form_builder: ^9.2.1
  #  timeline_tile: ^2.0.0
  shimmer: ^3.0.0
  #  photo_view: ^0.15.0
  flutter_rating_bar: ^4.0.1
  animated_splash_screen: ^1.3.0
  google_sign_in: ^6.2.2
  googleapis: ^13.2.0
  googleapis_auth: ^1.6.0
  percent_indicator: ^4.2.3
  #  file_picker: ^5.2.7
  #notifications
  firebase_core: ^3.10.1
  firebase_messaging: ^15.0.4
  flutter_local_notifications: ^18.0.1
  image: ^4.5.2
  #  flutter_download_manager: ^0.5.5
  flutter_document_picker: ^5.2.3

  flutter_cached_pdfview: ^0.4.3

  path_provider: ^2.0.11
  open_file: ^3.3.1
  flutter_file_downloader: ^2.0.0
  photo_view: ^0.15.0
  flutter_svg: ^2.0.10+1


  #  video_player: ^2.4.7 # For video preview

  #  flutter_image_compress: ^1.1.0 # For compressing images




  #Bloc
  flutter_bloc: ^8.1.3



  # Code generator (mainly used with cubit & retrofit)
  freezed: ^2.4.5
  freezed_annotation: ^2.4.1
  # for dependency injection
  # Automatically generate code for converting to and from JSON by annotating Dart classes
  json_annotation: ^4.8.1
  # Networking
  dio: ^5.3.3
  flutter_dotenv: ^5.2.1
  retrofit: ^4.0.3
  retrofit_generator: ^8.0.4
  pretty_dio_logger: ^1.3.1
  permission_handler: ^11.3.1
  rename: ^3.0.2



  # reading and writing simple key-value pairs
  shared_preferences: ^2.2.3
  # provides API to store data in secure storage.
  flutter_secure_storage: ^9.2.2
  table_calendar: ^3.1.2
  intl: ^0.19.0
  infinite_scroll_pagination: ^4.0.0
  socket_io_client: ^3.0.2
  #  device_preview: ^1.2.0

  # payment
  #  flutter_paytabs_bridge: ^2.6.18
  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.8
  url_launcher: ^6.3.1
  app_links: ^6.3.3




  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.

dev_dependencies:
  flutter_test:
    sdk: flutter
  very_good_analysis: ^5.1.0
  flutter_launcher_icons: ^0.14.2
  # dart run build_runner build --delete-conflicting-outputs
  build_runner: ^2.4.8
  json_serializable: ^6.7.1

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/
    - assets/core/
    - assets/icons/
    - assets/features/
    - assets/features/png_features/
    - assets/features/svg_features/
    - assets/splash_screen/

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/to/resolution-aware-images

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/to/asset-from-package

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/to/font-from-package
